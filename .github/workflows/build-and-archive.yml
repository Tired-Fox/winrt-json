name: Build and Archive

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v1.2.3)'
        required: true
      target:
        description: 'Branch or commit SHA to tag (manual runs only)'
        required: false
        default: 'main'

permissions:
  contents: write # Needed to create/update releases

defaults:
  run:
    shell: bash

jobs:
  build-and-archive:
    runs-on: ubuntu-latest

    env:
      DOTNET_VERSION: '9.0.203'
      PROJECT_PATH: 'MetadataGenerator.csproj'
      OUTPUT_DIR: 'output'

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Run App (Release)
      run: |
        mkdir -p "${{ env.OUTPUT_DIR}}"
        dotnet run --configuration Release --project "${{ env.PROJECT_PATH }}" -- --minify

    - name: Verify generated files exist
      run: |
        if [ ! -d "${{ env.OUTPUT_DIR }}" ] || [ -z "$(ls -A "${{ env.OUTPUT_DIR }}" 2>/dev/null)" ]; then
          echo "::error::No Files found in ${{ env.OUTPUT_DIR }}. Update OUTPUT_DIR or your app's output path."
          exit 1
        fi

    - name: Compute Paths
      id: paths
      run: |
        if [ "${{ github.ref_type }}" = "tag" ]; then
          TAG="${{ github.ref_name }}"
        else
          TAG="${{ inputs.tag }}"
        fi
        echo "TAG=$TAG" >> "$GITHUB_ENV"
        echo "ARCHIVE=Metadata-${TAG}.tar.gz" >> "$GITHUB_ENV"

    - name: Compute Tag & Archive Name
      id: meta
      run: |
        if [ "${{ github.ref_type }}" = "tag" ]; then
          TAG="${{ github.ref_name }}"
        else
          TAG="${{ inputs.tag }}"
        fi
        echo "TAG=$TAG" >> "$GITHUB_ENV"
        echo "ARCHIVE=Metadata-${TAG}.zip" >> "$GITHUB_ENV"

    - name: Create zip archive
      run: |
        cd "${{ env.OUTPUT_DIR }}"
        # Create the zip in the workspace root, containing ONLY the contents of FINAL_OUTPUT
        zip -r "$GITHUB_WORKSPACE/${ARCHIVE}" .

    - name: Create/Update Release (tag push)
      if: github.ref_type == 'tag'
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ env.ARCHIVE }}
        generate_release_notes: true

    - name: Create/Update Release (manual run)
      if: github.event_name == 'workflow_dispatch'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ inputs.tag }}
        target_commitish: ${{ inputs.target }}
        files: ${{ env.ARCHIVE }}
        generate_release_notes: true
